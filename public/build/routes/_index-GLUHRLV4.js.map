{
  "version": 3,
  "sources": ["../../../app/routes/_index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_index.tsx\");\n  import.meta.hot.lastModified = \"1694633781855.59\";\n}\n// REMIX HMR END\n\nimport { Form, useActionData } from \"@remix-run/react\";\nimport React from \"react\";\nexport const meta = () => {\n  return [{\n    title: \"New Remix App\"\n  }, {\n    name: \"description\",\n    content: \"Welcome to Remix!\"\n  }];\n};\nexport const action = async ({\n  request\n}) => {\n  const data = Object.fromEntries(await request.formData());\n  //here, do something with the form data and return a value  \n  return data;\n};\nexport default function Index() {\n  _s();\n  const data = useActionData(); //we access the return value of the action here\n  console.log(data);\n  return <div style={{\n    fontFamily: \"system-ui, sans-serif\",\n    lineHeight: \"1.8\"\n  }}>\n      <h1>Plan your trip</h1>\n      <Form method=\"post\">\n        <label>Destination</label>\n        <input type=\"text\" name=\"destination\" />\n        <input type=\"submit\" />\n      </Form>\n    </div>;\n}\n_s(Index, \"EuQJlwp+1/dClAy+OhUaWQ2c6r8=\", false, function () {\n  return [useActionData];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;AA8CM;AA7CN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4BAA8B,EAAE;AAAA,EACzE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuB;AACvB,cAAY,IAAI,eAAe;AACjC;AAKO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC;AACH;AAQe,SAAR,QAAyB;AAC9B,KAAG;AACH,QAAM,OAAO,cAAc;AAC3B,UAAQ,IAAI,IAAI;AAChB,SAAO,mDAAC,SAAI,OAAO;AAAA,IACjB,YAAY;AAAA,IACZ,YAAY;AAAA,EACd,GACI;AAAA,uDAAC,QAAG,8BAAJ;AAAA;AAAA;AAAA;AAAA,WAAkB;AAAA,IAClB,mDAAC,QAAK,QAAO,QACX;AAAA,yDAAC,WAAM,2BAAP;AAAA;AAAA;AAAA;AAAA,aAAkB;AAAA,MAClB,mDAAC,WAAM,MAAK,QAAO,MAAK,iBAAxB;AAAA;AAAA;AAAA;AAAA,aAAsC;AAAA,MACtC,mDAAC,WAAM,MAAK,YAAZ;AAAA;AAAA;AAAA;AAAA,aAAqB;AAAA,SAHvB;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OATG;AAAA;AAAA;AAAA;AAAA,SAUL;AACJ;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
